CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

OPTION(BUILD_SIEGE "Build the SIEGE library" ON)
OPTION(BUILD_DEMOS "Build the demos" ON)
OPTION(BUILD_BINDINGS_CPP "Build the C++ bindings" OFF)
OPTION(BUILD_BINDINGS_TINYPY "Build the TinyPy bindings" OFF)

SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/CMakeModules/")
INCLUDE_DIRECTORIES(include)

IF(BUILD_SIEGE)
    PROJECT(SIEGE)
        FILE(GLOB_RECURSE SIEGE_SOURCES siege/*.c)
        ADD_LIBRARY(SIEGE SHARED ${SIEGE_SOURCES})
        IF(UNIX)
            TARGET_LINK_LIBRARIES(SIEGE dl m)
        ENDIF(UNIX)
ENDIF(BUILD_SIEGE)

IF(BUILD_DEMOS)
    PROJECT(Demo-Sprite)
        ADD_EXECUTABLE(${PROJECT_NAME} demos/sprite.c)
        TARGET_LINK_LIBRARIES(${PROJECT_NAME} SIEGE)
        IF(UNIX)
            TARGET_LINK_LIBRARIES(${PROJECT_NAME} dl m)
        ENDIF(UNIX)

    PROJECT(Demo-Text)
        ADD_EXECUTABLE(${PROJECT_NAME} demos/text.c)
        TARGET_LINK_LIBRARIES(${PROJECT_NAME} SIEGE)
        IF(UNIX)
            TARGET_LINK_LIBRARIES(${PROJECT_NAME} dl m)
        ENDIF(UNIX)

    PROJECT(Demo-Physics)
        ADD_EXECUTABLE(${PROJECT_NAME} demos/physics.c)
        TARGET_LINK_LIBRARIES(${PROJECT_NAME} SIEGE)
        IF(UNIX)
            TARGET_LINK_LIBRARIES(${PROJECT_NAME} dl m)
        ENDIF(UNIX)
ENDIF(BUILD_DEMOS)

IF(BUILD_BINDINGS_CPP)
    ADD_SUBDIRECTORY(bindings/cpp)
ENDIF(BUILD_BINDINGS_CPP)
IF(BUILD_BINDINGS_TINYPY)
    ADD_SUBDIRECTORY(bindings/tinypy)
ENDIF(BUILD_BINDINGS_TINYPY)
